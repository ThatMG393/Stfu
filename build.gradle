plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = "io.github.itsfelix5"

base {
    archivesName = "Stfu"
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

loom {
    accessWidenerPath = file("src/main/resources/stfu.accesswidener")
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(21)
}

java {
    if (JavaVersion.current() < JavaVersion.toVersion(21)) toolchain.languageVersion = JavaLanguageVersion.of(21)
}

jar {
    from("LICENSE") {
        rename { "${it}_Stfu" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = "Stfu"
            from components.java
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "Rg9WdvvR"
    uploadFile = remapJar
    loaders = ["fabric", "quilt"]
    syncBodyFrom = rootProject.file("README.md").text
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)